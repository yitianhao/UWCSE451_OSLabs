Question #1
Describe the relationship between scheduler, sched, swtch in kernel/proc.c.

- scheduler is the main function running, it pick a process to run by looping through ptable.
When a process being chosen, it makes context switch by calling swtch to tabke control of the cpu.
- sched will be called when a process want to relinquish the control back to scheduler.

Question #2
Describe why the child process is able to return to user-level application where fork is called.

Because when we call allocproc to allocate virtual address space for the child process,
it has set the rip (instruction pointer register) of its child process to retfork, which
is the first instruction to execute when the process is scheduled by the scheduler. By calling retfork,
child process can be return to user-level application.

Question #3
How does process kill work in xk? What is its relationship with exit?

A process can exit itself. A process (A) can kill another process (B). However, process B will not be
terminated on the spot. It will try to get kernel entry and call exit to exit itself.

Question #4
For each member of the project team, how many hours did you
spend on this lab?
Kelvin Fang: 20hrs
Yitian Hao: 27h